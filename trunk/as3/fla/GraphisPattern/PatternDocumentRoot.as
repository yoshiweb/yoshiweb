package {		import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.Sprite;		import net.yoshiweb.display.graphics.Pattern;		public class PatternDocumentRoot extends Sprite {		/////////////////////////////////////////////////////////////////				/////////////////////////////////////////////////////////////////		// コンストラクタ		public function PatternDocumentRoot() {						_exampleCustom();			//_exampleBitmapData();					}		/////////////////////////////////////////////////////////////////		// Event Handler		/////////////////////////////////////////////////////////////////				/////////////////////////////////////////////////////////////////		// public		/////////////////////////////////////////////////////////////////				///////////////////////////////////////////////////////////////		// private		/////////////////////////////////////////////////////////////////		private function _exampleCustom():void {			// タイル状のパターン２次元配列を作成			var tileArray:Array = new Array();			tileArray[0] = [1, 0, 0, 0];			tileArray[1] = [0, 0, 0, 0];			tileArray[2] = [0, 0, 1, 0];			tileArray[3] = [0, 0, 0, 0];						// 各ピクセルを塗りつぶす色を配列で指定			var argbArray:Array = new Array();			argbArray[0] = 0x00;		// 透過			argbArray[1] = 0xffff0000;	// 赤									// 適用先、サイズなどを指定して、実行。			var sprite:Sprite = new Sprite();			this.addChild(sprite);			Pattern.custom(sprite, 50, 100, tileArray, argbArray);		}				private function _exampleBitmapData():void {			// タイル状のパターン２次元配列を作成			var tileArray:Array = new Array();			tileArray[0] = [1, 0, 0, 0];			tileArray[1] = [0, 0, 0, 0];			tileArray[2] = [0, 0, 1, 0];			tileArray[3] = [0, 0, 0, 0];						// 各ピクセルを塗りつぶす色を配列で指定			var argbArray:Array = new Array();			argbArray[0] = 0x00;		// 透過			argbArray[1] = 0xffff0000;	// 赤						var bmd:BitmapData = Pattern.createBitmapData(tileArray, argbArray);			var bm:Bitmap = new Bitmap(bmd);			this.addChild(bm);		}		/////////////////////////////////////////////////////////////////	}}